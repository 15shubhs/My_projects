HTML:
<!DOCTYPE html>
<html>
  <head>
    <title>Walking Animation</title>
    <style>
      #map {
        height: 400px;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap" async defer></script>
    <script src="animation.js"></script>
  </body>
</html>

JavaScript (animation.js):
let map, marker, pathCoordinates;
let speed = 50; // Average walking speed in pixels per second
let position = 0;

function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: { lat: START_LAT, lng: START_LON },
    zoom: 14,
  });

  pathCoordinates = [
    new google.maps.LatLng(START_LAT, START_LON),
    new google.maps.LatLng(END_LAT, END_LON),
  ];

  marker = new google.maps.Marker({
    map: map,
    position: pathCoordinates[0],
  });

  animateMarker();
}

function animateMarker() {
  if (position === pathCoordinates.length - 1) {
    return;
  }

  const from = pathCoordinates[position];
  const to = pathCoordinates[position + 1];
  const distance = google.maps.geometry.spherical.computeDistanceBetween(from, to);
  const duration = (distance / speed) * 1000; // Convert to milliseconds

  const startTime = new Date().getTime();

  function moveMarker() {
    const elapsed = new Date().getTime() - startTime;
    const fraction = elapsed / duration;

    if (fraction < 1) {
      const lat = from.lat() + (to.lat() - from.lat()) * fraction;
      const lng = from.lng() + (to.lng() - from.lng()) * fraction;
      marker.setPosition(new google.maps.LatLng(lat, lng));
      requestAnimationFrame(moveMarker);
    } else {
      position++;
      if (position < pathCoordinates.length - 1) {
        setTimeout(animateMarker, 1000); // Wait for a second between segments
      }
    }
  }

  moveMarker();
}

